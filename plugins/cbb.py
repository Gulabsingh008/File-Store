from pyrogram import Client 
from bot import Bot
from config import *
from pyrogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from database.database import add_user, del_user, full_userbase, present_user

@Bot.on_callback_query()
async def cb_handler(client: Bot, query: CallbackQuery):
    data = query.data
    if data == "help":
        await query.message.edit_text(
            text=HELP_TXT.format(first=query.from_user.first_name),
            disable_web_page_preview=True,
            reply_markup=InlineKeyboardMarkup(
                [
                    [
                        InlineKeyboardButton(' ú·¥è·¥ç·¥á', callback_data='start'),
                        InlineKeyboardButton("·¥Ñ ü·¥èÍú±·¥á", callback_data='close')
                    ]
                ]
            )
        )
    elif data == "about":
        await query.message.edit_text(
            text=ABOUT_TXT.format(first=query.from_user.first_name),
            disable_web_page_preview=True,
            reply_markup=InlineKeyboardMarkup(
                [ [ InlineKeyboardButton("·¥ç·¥è·¥†…™·¥á ·¥Ñ ú·¥Ä…¥…¥·¥á ü", callback_data ="https://t.me/Ra_yan_2024_movie"),
                  InlineKeyboardButton("·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥á ·¥Ñ ú·¥Ä…¥…¥·¥á ü" , callback_data = "https://t.me/+OiKmB79YlMJmNTJl")],
                 [InlineKeyboardButton("s·¥á·¥Ä Ä·¥Ñ ú ·¥Ä…¥ è ·¥ç·¥è·¥†…™·¥á", url = "https://t.me/rezii_auto_filter")],
                    [
                        InlineKeyboardButton(" ú·¥è·¥ç·¥á", callback_data = "start"),
                        InlineKeyboardButton(" ·¥Ñ ü·¥ès·¥á ", callback_data = "close")
                    ]
                ]
            )
        )
    elif data == "start":
        await query.message.edit_text(
            text=START_MSG.format(first=query.from_user.first_name),
            disable_web_page_preview=True,
            reply_markup=InlineKeyboardMarkup(
                [
                    [ InlineKeyboardButton(text="üèñÔ∏è", callback_data="about"),
                    InlineKeyboardButton(text="üçÇ", callback_data="about"),
                    InlineKeyboardButton(text="‚ö†Ô∏è", callback_data="me"),
                    InlineKeyboardButton(text="üí∏", callback_data="about"),
                    InlineKeyboardButton(text="üé≠", callback_data="about"),
                ],[ InlineKeyboardButton( "·¥ç·¥Ä…™…¥ ·¥Ñ ú·¥Ä…¥…¥·¥á ü", callback_data = "main" ),
                    InlineKeyboardButton("·¥ç·¥è·¥†…™·¥á ·¥Ñ ú·¥Ä…¥…¥·¥á ü ", callback_data = "main")
                ], [ InlineKeyboardButton("s·¥á·¥Ä Ä·¥Ñ ú ·¥Ä…¥ è ·¥ç·¥è·¥†…™·¥á", url = "http://t.me/rezii_auto_filter_bot") ],
                [
                    InlineKeyboardButton(" ú·¥á ü·¥ò", callback_data = "help"),
                    InlineKeyboardButton("·¥Ä ô·¥è·¥ú·¥õ", callback_data = "about")
                ]
            ]
            )
        )
    
    elif data == "close":
        await query.message.delete()
        try:
            await query.message.reply_to_message.delete()
        except:
            pass
      
    elif data == "main":
        await query.message.edit_text(
            text=f"<blockquote> ú·¥á ü ü·¥è ·¥ç è ·¥ús·¥á Äs ·¥ç è ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥á & ·¥ç·¥Ä…™…¥ ·¥Ñ ú·¥Ä…¥…¥·¥á ü …™s …¢…™·¥†·¥á…¥  ô·¥á ü·¥è·¥°.</blockquote>",
            disable_web_page_preview=True,
            reply_markup = InlineKeyboardMarkup(
                [   
                    [
                        InlineKeyboardButton("·¥ç·¥Ä…™…¥ ·¥Ñ ú·¥Ä…¥…¥·¥á ü", url="https://t.me/Ra_yan_2024_movie"),
                        InlineKeyboardButton("·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥á ·¥Ñ ú·¥Ä…¥…¥·¥á ü",url = "https://t.me/+OiKmB79YlMJmNTJl")
                    ],
                    [   InlineKeyboardButton(" ú·¥è·¥ç·¥á ", callback_data = "start"), 
                        InlineKeyboardButton("·¥Ñ ü·¥ès·¥á ", callback_data = "close")
                    ]
                ]
            )
        )
    elif data == "me":
            await query.message.edit(
                text=f"<b>·¥õ ú…™s s·¥á·¥Ñ·¥õ…™·¥è…¥ …™s ·¥Ä·¥†·¥Ä…™ ü·¥Ä ô ü·¥á ·¥è…¥ ü è “ì·¥è Ä ·¥Ä·¥Ö·¥ç…™…¥s & ·¥Ö·¥á·¥†·¥á ü·¥è·¥ò·¥á Ä</b>",
                disable_web_page_preview=True,
                reply_markup = InlineKeyboardMarkup(
                    [
                        [  InlineKeyboardButton("·¥Ö·¥á·¥† ü·¥è·¥ò·¥á Ä",url= "t.me/af_mhakal"),
                         InlineKeyboardButton("·¥Ä·¥Ö·¥ç…™…¥",url = "t.me/af_mhakal")],
                        [ InlineKeyboardButton(" ú·¥è·¥ç·¥á", callback_data = "start"),
                         InlineKeyboardButton( "·¥Ñ ü·¥ès·¥á", callback_data = "close")]
                    ]
                )
        )
    elif data == "source":
        await query.message.edit_text(
            text=f"<b><blockquote>·¥Ñ·¥è…¥·¥õ·¥Ä·¥Ñ·¥õ ·¥ç è ·¥Ö·¥á·¥† ü·¥è·¥ò·¥á Ä\n ·¥Ä“ì ·¥ç ú·¥Ä·¥ã·¥Ä ü ‚ù§Ô∏è \n‚òÖ <a herf='t.me/af_mhakal'>·¥Ä“ì ·¥ç ú·¥Ä·¥ã·¥Ä ü ‚ù§Ô∏è</a> \n‚òÖ <a herf='https://t.me/+OiKmB79YlMJmNTJl'> ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥á ·¥Ñ ú·¥Ä…¥…¥·¥á ü </a></blockquote></b>",
            disable_web_page_preview=True,
            reply_markup = InlineKeyboardMarkup(
                [   
                    [
                        InlineKeyboardButton("·¥Ä“ì ·¥ç ú·¥Ä·¥ã·¥Ä ü ‚ù§Ô∏è ", url="t.me/af_mhakal"),
                        InlineKeyboardButton(" ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥á ·¥Ñ ú·¥Ä…¥…¥·¥á ü",url="https://t.me/+OiKmB79YlMJmNTJl")
                    ],
                    [   InlineKeyboardButton(" ú·¥è·¥ç·¥á" , callback_data = "start"),
                        InlineKeyboardButton(" ·¥Ñ ü·¥ès·¥á", callback_data = "close")
                    ]
                ]
            )
        )
